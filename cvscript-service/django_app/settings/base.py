"""
Django settings for django_app project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import environ
import raven

root = environ.Path(__file__) - 3  # three folder back (/a/b/c/ - 3 = /)
env = environ.Env(DEBUG=(bool, False))  # set default values and casting
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "a8m7&irp9qcdn=8-_*ag)qu@+k8o!_)dn90esu(4e%jp-bz!*s"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django_app",
    # 'django.contrib.admin',
    # 'django.contrib.auth',
    # 'django.contrib.contenttypes',
    "django.contrib.sessions",
    "raven.contrib.django.raven_compat",
    # 'django.contrib.messages',
    # 'django.contrib.staticfiles',
    "django_extensions",  # extensions for django
]

MIDDLEWARE = [
    # "corsheaders.middleware.CorsMiddleware",
    # 'django.middleware.security.SecurityMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    # 'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = "django_app.urls"
CORS_ORIGIN_ALLOW_ALL = True

TEMPLATES = [
    # {
    #     'BACKEND': 'django.template.backends.django.DjangoTemplates',
    #     'DIRS': [],
    #     'APP_DIRS': True,
    #     'OPTIONS': {
    #         'context_processors': [
    #             'django.template.context_processors.debug',
    #             'django.template.context_processors.request',
    #             'django.contrib.auth.context_processors.auth',
    #             'django.contrib.messages.context_processors.messages',
    #         ],
    #     },
    # },
]

WSGI_APPLICATION = "django_app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    # Raises ImproperlyConfigured exception if DATABASE_URL not in os.environ
    "default": env.db(
        "DATABASE_URL", default="postgres://tuteria:punnisher@127.0.0.1:5435/careerlyft"
    ),
    # 'replica': env.db('REPLICA_DATABASE_URL', default='postgres://tuteria:punnisher@127.0.0.1:5435/tuteria')
}
DATABASES["default"]["ATOMIC_REQUESTS"] = True


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = "/static/"
AUTHENTICATION_SERVICE = os.getenv(
    "AUTHENTICATION_SERVICE", "http://localhost:8001/api-token-verify"
)
FIREBASE_URL = os.getenv("FIREBASE_URL", "www.https://sample101.firebaseio.com")

RAVEN_CONFIG = {
    "dsn": "https://149b040d827447858a4f5a602d4094d3:113cfe1c58744aac8cee81c5f2c5ac74@sentry.io/1255803",
    #  If  you  are  using  git,  you  can  also  automatically  configure  the
    #  release  based  on  the  git  info.
    # "release": raven.fetch_git_sha(os.path.abspath(os.pardir)),
}
CV_PROFILE_SERVICE = os.getenv(
    "CV_PROFILE_SERVICE", "https://cv-profile-staging.careerlyft.com"
)

